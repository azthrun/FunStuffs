# The model has already been created by the framework, and extends Rhom::RhomObject
# You can add more methods here
class Miner
  include Rhom::PropertyBag

  set :partition, :user

  class << self
    
    def storeMinerStatus(data)
      Miner.delete_all
      db = ::Rho::RHO.get_src_db("Miner")
      db.start_transaction
      begin
        data.keys.each do |workerId|
          worker = data[workerId]
          Miner.create({
            "object" => workerId,
            "condition" => worker["condition"],
            "osVersion" => worker["version"],
            "driver" => worker["driver"],
            "miner" => worker["miner"],
            "numOfGPU" => worker["gpus"].to_i,
            "minerInstance" => worker["miner_instance"].to_i,
            "minerHashes" => worker["miner_hashes"],
            "bioses" => worker["bioses"],
            "gpusInfo" => worker["meinfo"],
            "gpusRam" => worker["vramsize"],
            "osDriver" => worker["drive_name"],
            "motherboard" => worker["mobo"],
            ""
          })
        end
        db.commit
      rescue Rho::RhoError => e        
        db.rollback
      end
    end
    
  end
end
